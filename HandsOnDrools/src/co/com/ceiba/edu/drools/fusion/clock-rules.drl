package drools.cookbook;

import drools.cookbook.model.FlightStatus
import drools.cookbook.model.FlightControl
import drools.cookbook.model.EmergencySignal

import drools.cookbook.helper.EmergencySystem

global co.com.ceiba.edu.drools.fusion.FlightControl control;

declare FlightStatus
    @role(event)
end

declare EmergencySignal
    @role(event)
end

rule "Contacto"
salience 100
when
    $currentFlight : FlightStatus() from entry-point "flight-control"
    not (exists (FlightStatus(this != $currentFlight, flight == $currentFlight.flight) from entry-point "flight-control"))
then
    control.addFlight($currentFlight);
    System.out.println("Contacto con el vuelo " + $currentFlight.getFlight());
end


rule "arrivo de vuelos"
when
    $flight : FlightStatus() from entry-point "flight-arrival"
    // Obtener recursos para preparar el aterrizaje de vuelos
then
    System.out.println("Vuelo " + $flight.getFlight() + " llegando a " + control.getAirport() + ". Enviando instrucciones");
    // Env√≠a instrucciones al vuelo de llegada
end

rule "sistema de emergencia"
when
    $emergency : EmergencySignal() from entry-point "emergency-channel"
    FlightStatus(flight==$emergency.flight, this before[0m, 10m] $emergency) from entry-point "flight-arrival"
then
    // Emergencia en progreso.
    System.out.println("Emergencia en progreso. Vuelo: " + $emergency.getFlight());
    EmergencySystem.sendFireTrucks();
    EmergencySystem.sendAmbulances();
    EmergencySystem.cleanRunways();
end